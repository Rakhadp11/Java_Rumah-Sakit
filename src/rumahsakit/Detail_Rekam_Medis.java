/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rumahsakit;

import java.awt.HeadlessException;
import java.awt.RenderingHints.Key;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class Detail_Rekam_Medis extends javax.swing.JFrame {

    private DefaultTableModel model;

    /**
     * Creates new form Detail_Rekam_Medis
     */
    public Detail_Rekam_Medis() {
        initComponents();
        TampilData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        no_pasien = new javax.swing.JTextField();
        cari = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(41, 83, 127));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DETAIL REKAM MEDIS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 280, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("No Pasien");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 60, 20));

        no_pasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no_pasienActionPerformed(evt);
            }
        });
        no_pasien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                no_pasienKeyPressed(evt);
            }
        });
        jPanel1.add(no_pasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 400, -1));

        cari.setText("Cari");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });
        jPanel1.add(cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 70, -1));

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 70, -1));

        Tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No Rekam Medis", "Id Dokter", "Id Perawat", "Nama Penyakit"
            }
        ));
        Tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabel);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 530, 90));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void no_pasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no_pasienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_no_pasienActionPerformed

    private void TabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelMouseClicked
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel)Tabel.getModel();
            int SelectedRowIndex = Tabel.getSelectedRow();

            no_rekam_medis.setText(model.getValueAt(SelectedRowIndex, 0).toString());
            no_pasien.setText(model.getValueAt(SelectedRowIndex, 1).toString());

        }catch (NullPointerException ex){

        }
    }//GEN-LAST:event_TabelMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Home().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
        hapusdata();
        TampilData();
        bersih();
    }//GEN-LAST:event_cariActionPerformed

    private void no_pasienKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_no_pasienKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == Key.Event.VK_ENTER) {
        try {
            String nrm = no_pasien.getText();
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/database_rumahsakit","root","");
            
            pst = com.preparedStatement("select * from detail_rekam_medis where no_rekam_medis = ? ");
            pst.setString(1, nrm);
            
            
        }
    
    }
    }//GEN-LAST:event_no_pasienKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Detail_Rekam_Medis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Detail_Rekam_Medis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Detail_Rekam_Medis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Detail_Rekam_Medis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Detail_Rekam_Medis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabel;
    private javax.swing.JButton cari;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField no_pasien;
    // End of variables declaration//GEN-END:variables

//Codingan untuk tampil data
public void TampilData() {
    Object[] baris = {"no_rekam_medis","no_pasien", };

        model = new DefaultTableModel(null, baris);
        Tabel.setModel(model);
        Connection connection = new Koneksi().getConnection();
        try {
            String sql = "select * from Detail_Rekam_Medis order by no_rekam_medis asc";
            java.sql.Statement statement = connection.createStatement();
            java.sql.ResultSet hasil = statement.executeQuery(sql);
            while (hasil.next()){
                String nonrm = hasil.getString("no_rekam_medis");
                String nopasien = hasil.getString("no_pasien");
                String[] data = {nonrm, nopasien};
                model.addRow(data);
            }
            
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, "Menampilkan data Gagal", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            JOptionPane.showMessageDialog(null, "Menampilkan data Gagal" + e);
        }
}


//codingan untuk input data
void simpandata() {
    //Deklarasi variabel
    String nrm = no_rekam_medis.getText(); //nama text field di form
    String nopasien = no_pasien.getText();    
    
    
    //Koneksi terhadap database
    Connection connection = new Koneksi().getConnection();
    
    
    //Proses penyimpanan
    try {
        String sql = "Insert into Detail_rekam_medis values(?,?)"; //jumlah sesuai dengan variabel di tabel
      PreparedStatement statement = connection.prepareStatement(sql);
      //connection.prepareStatement(sql);
      
      
      statement.setString(1,nrm);
      statement.setString(2,nopasien);

      
      statement.executeUpdate();
      
      JOptionPane.showMessageDialog(null, "DATA BERHASIL DISIMPAN", "informasi", JOptionPane.INFORMATION_MESSAGE);
      
      //Jika data tidak berhasil diinput
      //TampilData();
      //Tambah fungsi refresh
    
    } catch (HeadlessException | SQLException e) {
       // JOptionPane.showMessageDialog(null, "DATA GAGAL DISIMPAN","informasi",);
       //JOptionPane.INFORMATION_MESSAGE;
       JOptionPane.showMessageDialog(null, "DATA GAGAL DISIMPAN \n" +e) ; //Gagal menampilkan data
    } 

    
    }

//codingan untuk input data
void ubahdata() {
    //Deklarasi variabel
    String nrm = no_rekam_medis.getText(); //nama text field di form
    String nopasien = no_pasien.getText();

    //Koneksi terhadap database
    Connection connection = new Koneksi().getConnection();
    
    
    //Proses penyimpanan
    try {
        String sql = "update Detail_rekam_medis set nopasien=? where no_rekam_medis=?"; //jumlah sesuai dengan variabel di tabel
      PreparedStatement statement = connection.prepareStatement(sql);
      //connection.prepareStatement(sql);
      
      
      
      statement.setString(1,nopasien);
      statement.setString(2,nrm);

      statement.executeUpdate();
      
      JOptionPane.showMessageDialog(null, "DATA BERHASIL DIUBAH", "informasi", JOptionPane.INFORMATION_MESSAGE);
      
      //Jika data tidak berhasil diinput
      //TampilData();
      //Tambah fungsi refresh
    
    } catch (HeadlessException | SQLException e) {
       // JOptionPane.showMessageDialog(null, "DATA GAGAL DISIMPAN","informasi",);
       //JOptionPane.INFORMATION_MESSAGE;
       JOptionPane.showMessageDialog(null, "DATA GAGAL DIUBAH \n" +e) ; //Gagal menampilkan data
    } 
}


public void hapusdata(){
    
    int baris = Tabel.getSelectedRow();//namavariabeltabel pasien
    String no_rekam_medis = model.getValueAt(baris, 0).toString();
    
    int Data = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin untuk menghapus data no_rekam_medis :" +no_rekam_medis+ "?",
            "konfirmasi", JOptionPane.YES_NO_OPTION); //primary key
    
    if (Data == 0){
        try {
            //memanggil method koneksi
            Connection connection = new Koneksi().getConnection();
            String sql = "delete from Detail_rekam_medis where no_rekam_medis = '" +no_rekam_medis + "'";
            Statement statement = connection.createStatement();
            statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
            
            TampilData();
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Data Gagal Dihapus");
        }
    }
}

//Untuk kodingan bersih setelah proses 
public void bersih(){
    no_rekam_medis.setText("");
    no_pasien.setText("");
}

}
